int main() {
    //--------------------------
    // Test function declaration
    //--------------------------
    int fun_one(int a, int b);
    int fun_two(int, int x, int y);
    int fun_three();

    //--------------------------
    // Test variable declaration
    //--------------------------
    int a      = 5 * 2 - 3;                   // Multiplication and subtraction
    int b      = (a % 3) + 4;                 // Modulus and addition
    int sum    = a + b * 2;                   // Combination of addition and multiplication
    int i      = (b > 5) ? a : b;             // Ternary expression
    int k      = (sum / 2) + 1;               // Division and addition
    int result = (k > i) ? (k - i) : (i - k); // Another ternary expression

    //--------------------------
    // TODO: Bitwise operation examples
    //--------------------------
    // int j = (sum & 1) ? sum - 1 : sum + 1; // Bitwise AND with conditional
    // int m = (k << 2) - j;                  // Left shift and subtraction
    // int x = m ^ k;                         // Bitwise XOR
    // int y = ~x & 0xF;                      // Bitwise NOT and AND mask

    //-------------------------
    // TODO: Test function calls
    //-------------------------
    // result = fun_one(a, b);
    // sum = fun_two(result, x, y);

    //-------------------------
    // If-else structure
    //-------------------------
    if (a <= 10) {
        sum = a;
    } else if (a == b) {
        sum = a + b;
    } else {
        sum = b;
    }

    //-------------------------
    // For loop: all parts present
    //-------------------------
    for (int k = 0; k < 3; k = k + 1) {
        sum = sum + k;
    }

    //-------------------------
    // For loop with empty initialization
    //-------------------------
    for (; a < 8; a = a + 1) {
        sum = sum + a;
    }

    //-------------------------
    // For loop with empty condition
    //-------------------------
    for (int y = 0;; y = y + 1) {
        sum = sum + y;
        if (y >= 2) {
            break;
        }
    }

    //-------------------------
    // For loop with empty increment
    //-------------------------
    for (int m = 0; m < 3;) {
        sum = sum + m;
        m   = m + 1;
    }

    //-------------------------
    // TODO: While loop test
    //-------------------------
    // while (i < 5) {
    //     sum = sum + i;
    //     i = i + 1;
    // }

    //-------------------------
    // TODO: Do-while loop test
    //-------------------------
    // do {
    //     sum = sum - 1;
    // } while (sum > 10);

    //-------------------------
    // More ternary expressions
    //-------------------------
    a   = (a > b) ? a : b;
    b   = (a == b) ? a + b : a - b;
    sum = (sum > 20) ? sum - 5 : sum + 5;

    //-------------------------
    // Additional nested if-else blocks
    //-------------------------
    if (a > 0) {
        if (b > 0) {
            sum = sum + a + b;
        } else {
            sum = sum - a;
        }
    } else {
        sum = sum + 1;
    }

    //-------------------------
    // TODO: Switch-case test
    //-------------------------
    // switch (sum) {
    //     case 5:
    //         sum = sum + 10;
    //         break;
    //     case 10:
    //         sum = sum - 3;
    //         break;
    //     default:
    //         sum = sum * 2;
    // }

    //-------------------------
    // Null statement
    //-------------------------
    ;

    //-------------------------
    // Nested ternary for complexity
    //-------------------------
    i = (j > 0) ? ((j > 10) ? j - 1 : j + 2) : (j - 2);

    //-------------------------
    // TODO: Function call inside an expression
    //-------------------------
    // result = fun_three() + fun_one(a, b);

    //-------------------------
    // Final computation
    //-------------------------
    sum = sum + i + j + x + result;

    //-------------------------
    // Return the final result
    //-------------------------
    return sum;
}
